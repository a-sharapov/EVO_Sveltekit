version: "3.0"

networks:
  development:
    driver: bridge

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      CHOKIDAR_USEPOLLING: "true"
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
    volumes:
      - ./frontend:/usr/src/frontend
      - /usr/src/frontend/node_modules
    command: npm run dev -- --host
    networks:
      - development
    expose:
      - 3000
      - 24678
    ports:
      - "3000:3000"
      - "24678:24678"
    links:
      - backend
    depends_on:
      - backend
    stdin_open: true
    restart: on-failure

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ./backend:/var/www/html/
    links:
      - db
    depends_on:
      - db
    ports:
      - "5000:5000"
    networks:
      - development

  db:
    container_name: db
    image: mysql:8.0
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_USERPASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOTPASSWORD}
    volumes:
      - ./dump:/docker-entrypoint-initdb.d
      - ./conf:/etc/mysql/conf.d
      - persistent:/var/lib/mysql
    networks:
      - development

  phpmyadmin:
    container_name: pma
    image: phpmyadmin/phpmyadmin
    links:
      - db:db
    ports:
      - "5700:80"
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_USERPASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOTPASSWORD}
    networks:
      - development
    
  nginx:
    container_name: proxy
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    restart: on-failure
    networks:
      - development
    volumes:
      - ./certs:/etc/nginx/certs

volumes:
  certs:
  persistent: